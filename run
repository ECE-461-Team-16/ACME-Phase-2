#!/bin/bash

# Install dependencies
install_dependencies() {

    if ! command -v node &> /dev/null; then # checks for node.js 
        sudo apt update > /dev/null 2>&1
        sudo apt install -y nodejs > /dev/null 2>&1
    fi

    if ! command -v npm &> /dev/null; then # checks for npm
        sudo apt install -y npm > /dev/null 2>&1
    fi
    
    {
        npm install > /dev/null 2>&1
        npm install axios-mock-adapter > /dev/null 2>&1
        npm install express sqlite3 bcryptjs > /dev/null 2>&1
        npm install @types/express @types/sqlite3 @types/bcryptjs --save-dev > /dev/null 2>&1
        npm install @typescript-eslint/parser @typescript-eslint/eslint-plugin --save-dev > /dev/null 2>&1
        npm install aws-sdk > /dev/null 2>&1 # AWS interactions
        npm install express-fileupload > /dev/null 2>&1
        npm install adm-zip > /dev/null 2>&1
        npm install archiver > /dev/null 2>&1
        npm install unzipper > /dev/null 2>&1
        npm install bcrypt > /dev/null 2>&1
    } && echo "9 dependencies installed..."


    # ****** add these later
    # sudo apt install pm2 -g
    # npm install semver somehow
    # sudo snap install aws-cli --classic
    # npm install multer


    
    if [ $? -ne 0 ]; then
        echo "Error installing dependencies"
        exit 1
    fi
    # echo "9 dependencies installed..."
}

# Compile the ts files
compile_typescript() {
    npx tsc
    if [ $? -ne 0 ]; then
        exit 1
    fi
}

# Check for first argument
if [ "$1" == "install" ]; then
    install_dependencies
    compile_typescript
    exit 0
fi

# If the first argument is 'test' or a file is provided, check if node_modules exists
if [ ! -d "node_modules" ]; then
    echo "Dependencies not installed. Please run './run install' first."
    exit 1
fi

# Ensure TypeScript files are compiled before running
compile_typescript

# Pass the rest of the arguments to the cli.js script
exec node ./src/cli.js "$@"
